{'coord': {'lon': 18.0649, 'lat': 59.3326}, 
'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 
'base': 'stations', 
'main': {'temp': -1.17, 'feels_like': -5.42, 'temp_min': -1.57, 'temp_max': -0.97, 'pressure': 1020, 'humidity': 87}, 
'visibility': 10000, 
'wind': {'speed': 3.6, 'deg': 70}, 
'clouds': {'all': 75}, 
'dt': 1710001226, 
'sys': {'type': 1, 'id': 1788, 'country': 'SE', 'sunrise': 1709961672, 'sunset': 1710002127}, 
'timezone': 3600, 
'id': 2673730, 
'name': 'Stockholm', 
'cod': 200}



def welcome_user():
    """Greets the user, asks for their name, and validates location input."""
    print("Welcome to WaveRider, your ultimate windsurfing companion!\n")
    print("Are you ready to conquer the waves today?\n")

    while True:
        name = input("Hey there, windsurfer! What's your name? ")

        try:
            if name.isalpha():
                print(f"Welcome aboard, {name}! Let's get you ready to ride!\n")

                while True:
                    location = input(f"{name}, where are you located? (e.g., City, Country)\n")

                    # Validate location format (comma separated)
                    if "," in location and len(location.split(",")) == 2:
                        print(f"Splendid, {location} is such a beautiful place!\n")
                        get_weather_data(api_key, location)  # Call with validated location
                        break
                    else:
                        print(f"Invalid location format. Please enter 'City, Country'.")

        except ValueError as err:
            print(f'{err}. Please try again.')
